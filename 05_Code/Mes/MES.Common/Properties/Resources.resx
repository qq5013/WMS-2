<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddMateriel" xml:space="preserve">
    <value>添加物料</value>
  </data>
  <data name="AddProduct" xml:space="preserve">
    <value>添加产品</value>
  </data>
  <data name="all" xml:space="preserve">
    <value>--全部--</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>分类</value>
  </data>
  <data name="ChangeQuantity" xml:space="preserve">
    <value>修改数量</value>
  </data>
  <data name="code" xml:space="preserve">
    <value>代码</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>颜色</value>
  </data>
  <data name="DataChangedSaveSuccess" xml:space="preserve">
    <value>数据已更改，是否保存？</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="FinishInbound" xml:space="preserve">
    <value>入库完成</value>
  </data>
  <data name="FinishJob" xml:space="preserve">
    <value>完工</value>
  </data>
  <data name="IsCloseAfterSaveSuccess" xml:space="preserve">
    <value>保存成功是否关闭编辑界面？</value>
  </data>
  <data name="Model" xml:space="preserve">
    <value>型号</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="NameOrPasswordError" xml:space="preserve">
    <value>用户名/密码错误</value>
  </data>
  <data name="NewPasswordAgain" xml:space="preserve">
    <value>输入的新密码不一致</value>
  </data>
  <data name="NewPasswordTooShort" xml:space="preserve">
    <value>输入新密码长度太短</value>
  </data>
  <data name="Notice" xml:space="preserve">
    <value>提示</value>
  </data>
  <data name="PasswordError" xml:space="preserve">
    <value>密码输入错误</value>
  </data>
  <data name="PleaseSelectProcess" xml:space="preserve">
    <value>请选择工序</value>
  </data>
  <data name="PlsInputProductCode" xml:space="preserve">
    <value>请输入正确的成品条码</value>
  </data>
  <data name="PlsInputProductTraceCode" xml:space="preserve">
    <value>请输入正确的产品跟踪码</value>
  </data>
  <data name="plsSelect" xml:space="preserve">
    <value>请选择</value>
  </data>
  <data name="PrintMateriel" xml:space="preserve">
    <value>打印物料</value>
  </data>
  <data name="ProductLine" xml:space="preserve">
    <value>生产产线</value>
  </data>
  <data name="RelaMaterialOrder" xml:space="preserve">
    <value>关联领料单号</value>
  </data>
  <data name="RelaOutbound" xml:space="preserve">
    <value>关联出库单号</value>
  </data>
  <data name="RelaProductionOrder" xml:space="preserve">
    <value>关联工单号</value>
  </data>
  <data name="RelaProductionPlan" xml:space="preserve">
    <value>关联生产计划</value>
  </data>
  <data name="RelaPurchaseOrder" xml:space="preserve">
    <value>关联采购申请单</value>
  </data>
  <data name="RelaSalesOrder" xml:space="preserve">
    <value>关联销售单</value>
  </data>
  <data name="SaveSuccess" xml:space="preserve">
    <value>保存成功</value>
  </data>
  <data name="SaveSuccessQuestion" xml:space="preserve">
    <value>保存成功是否关闭编辑界面？</value>
  </data>
  <data name="ScanMateriel" xml:space="preserve">
    <value>扫描物料</value>
  </data>
  <data name="Spec" xml:space="preserve">
    <value>规格</value>
  </data>
  <data name="Vendor" xml:space="preserve">
    <value>供应商</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>版本：</value>
  </data>
  <data name="SaveSuccessOpenIt" xml:space="preserve">
    <value>保存成功，是否打开</value>
  </data>
  <data name="CannotSave" xml:space="preserve">
    <value>文件无法保存，请确认文件不是只读状态并且未被打开</value>
  </data>
  <data name="ExcelFile" xml:space="preserve">
    <value>Excel 97-2003 工作簿|*.xls|Excel 工作簿|*.xlsx|PDF|*.pdf|CSV (逗号分隔)|*.csv</value>
  </data>
  <data name="UserCode" xml:space="preserve">
    <value>用户编号</value>
  </data>
</root>