<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="StockLog" xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="StockLog" type="Business.Domain.Inventory.StockLog,Business.Domain" />
    <typeAlias alias="StockLogView" type="Business.Domain.Inventory.Views.StockLogView,Business.Domain" />
  </alias>

  <!-- 缓存机制 -->
  <cacheModels>
    <cacheModel id="StockLogCache" implementation="MEMORY">
      <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
      <flushInterval minutes="5" />
      <flushOnExecute statement="StockLog.Insert" />
      <flushOnExecute statement="StockLog.Update" />
      <flushOnExecute statement="StockLog.Delete" />
      <flushOnExecute statement="StockLog.DeleteAll" />
      <property name="Type" value="Weak" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap class="StockLog" id="StockLog_Result">
      <result column="Id" property="Id" />
      <result column="LogType" property="LogType" />
      <result column="LogTime" property="LogTime" />
      <result column="LinkBillType" property="LinkBillType" />
      <result column="LinkBillId" property="LinkBillId" />
      <result column="LinkBillNumber" property="LinkBillNumber" />
      <result column="WarehouseId" property="WarehouseId" />
      <result column="LocationId" property="LocationId" />
      <result column="ContainerId" property="ContainerId" />
      <result column="SkuId" property="SkuId" />
      <result column="PackId" property="PackId" />
      <result column="BatchNumber" property="BatchNumber" />
      <result column="BeforeQty" property="BeforeQty" />
      <result column="InboundQty" property="InboundQty" />
      <result column="OutboundQty" property="OutboundQty" />
      <result column="AfterQty" property="AfterQty" />
      <result column="InboundBillNumber" property="InboundBillNumber" />
    </resultMap>

    <resultMap class="StockLogView" id="StockLogView_Result">
      <result column="Id" property="Id" />
      <result column="LogType" property="LogType" />
      <result column="LogTime" property="LogTime" />
      <result column="LinkBillType" property="LinkBillType" />
      <result column="LinkBillNumber" property="LinkBillNumber" />
      <result column="LinkBillId" property="LinkBillId" />
      <result column="WarehouseId" property="WarehouseId" />
      <result column="LocationId" property="LocationId" />
      <result column="ContainerId" property="ContainerId" />
      <result column="SkuId" property="SkuId" />
      <result column="PackId" property="PackId" />
      <result column="BatchNumber" property="BatchNumber" />
      <result column="BeforeQty" property="BeforeQty" />
      <result column="InboundQty" property="InboundQty" />
      <result column="OutboundQty" property="OutboundQty" />
      <result column="AfterQty" property="AfterQty" />

      <result column="InboundBillNumber" property="InboundBillNumber" />
      <result column="LogTypeName" property="LogTypeName" />
      <result column="SkuName" property="SkuName" />
      <result column="PackName" property="PackName" />
      <!--<result column="ClientName" property="AfterQty" />
      <result column="MerchantName" property="AfterQty" />
      <result column="VendorName" property="AfterQty" />-->
      <!--<result column="PlanNumber" property="PlanNumber" />
      <result column="BillNumber" property="BillNumber" />-->
      <result column="WarehouseName" property="WarehouseName" />
      <result column="AreaName" property="AreaName" />
      <result column="LocationName" property="LocationName" />
      <result column="ContainerName" property="ContainerName" />

      <result column="WarehouseCode" property="WarehouseCode" />
      <result column="AreaId" property="AreaId" />
      <result column="AreaCode" property="AreaCode" />
      <result column="BillTypeName" property="BillTypeName" />

      <result column="SkuNumber" property="SkuNumber" />
      <result column="LocationCode" property="LocationCode" />
      <result column="ContainerCode" property="ContainerCode" />

      <result column="ProductionDate" property="ProductionDate" />
      <result column="ExpiringDate" property="ExpiringDate" />
      <result column="ProductionBatch" property="ProductionBatch" />
      <result column="ManufacturingOrigin" property="ManufacturingOrigin" />
      <result column="PropertyValue1" property="PropertyValue1" />
      <result column="PropertyValue2" property="PropertyValue2" />
      <result column="PropertyValue3" property="PropertyValue3" />
      <result column="PropertyValue4" property="PropertyValue4" />
      <result column="PropertyValue5" property="PropertyValue5" />
      <result column="PropertyValue6" property="PropertyValue6" />
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="SplitPagerParameters" class="Hashtable">
      <parameter property="TableName" column="TableName" />
      <parameter property="SelectFields" column="SelectFields" />
      <parameter property="OrderByField" column="OrderByField" />
      <parameter property="PageSize" column="PageSize" />
      <parameter property="PageIndex" column="PageIndex" />
      <parameter property="OrderType" column="OrderType" />
      <parameter property="SelectCondition" column="SelectCondition" />
      <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
    </parameterMap>
  </parameterMaps>

  <statements>
    <select id="StockLog.Get" resultMap="StockLog_Result" cacheModel="StockLogCache">
      <![CDATA[
                SELECT Id,LogType,LogTime,LinkBillType,LinkBillId,WarehouseId,LocationId,ContainerId,SkuId,PackId,BatchNumber,BeforeQty,InboundQty,OutboundQty,AfterQty,InboundBillNumber FROM dbo.StockLog WITH (NOLOCK)
                    WHERE Id = #Id#
            ]]>
    </select>

    <select id="StockLog.GetAll" resultMap="StockLog_Result">
      <![CDATA[
                SELECT Id,LogType,LogTime,LinkBillType,LinkBillId,WarehouseId,LocationId,ContainerId,SkuId,PackId,BatchNumber,BeforeQty,InboundQty,OutboundQty,AfterQty,InboundBillNumber
                    FROM dbo.StockLog WITH (NOLOCK)
            ]]>
    </select>

    <select id="StockLog.GetByCondition" resultMap="StockLog_Result" cacheModel="StockLogCache">
      <![CDATA[
                SELECT Id,LogType,LogTime,LinkBillType,LinkBillId,WarehouseId,LocationId,ContainerId,SkuId,PackId,BatchNumber,BeforeQty,InboundQty,OutboundQty,AfterQty,InboundBillNumber
                    FROM dbo.StockLog WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <select id="StockLogView.Get" resultMap="StockLogView_Result" cacheModel="StockLogCache">
      <![CDATA[
                SELECT Id,LogType,LogTime,
                       LinkBillType,LinkBillId,LinkBillNumber,WarehouseId,LocationId,SkuNumber,LocationCode,ContainerCode,
                       ContainerId,SkuId,PackId,BatchNumber,BeforeQty,InboundQty,
                       OutboundQty,AfterQty,LogTypeName,SkuName,PackName,WarehouseName,AreaName,LocationName,ContainerName,
                       [ProductionDate],
                [ExpiringDate],
                [ProductionBatch],
                [ManufacturingOrigin],
                [PropertyValue1],
                [PropertyValue2],
                [PropertyValue3],
                [PropertyValue4],
                [PropertyValue5],
                [PropertyValue6],
                WarehouseCode,AreaId, AreaCode,BillTypeName,InboundBillNumber
                    FROM dbo.Vw_StockLog WITH (NOLOCK)
                    WHERE Id = #Id#
            ]]>
    </select>

    <select id="StockLogView.GetAll" resultMap="StockLogView_Result">
      <![CDATA[
                SELECT Id,LogType,LogTime,LinkBillType,LinkBillId,LinkBillNumber,SkuNumber,LocationCode,ContainerCode
                       WarehouseId,LocationId,ContainerId,SkuId,PackId,
                       BatchNumber,BeforeQty,InboundQty,OutboundQty,AfterQty,
                       LogTypeName,SkuName,PackName,WarehouseName,AreaName,LocationName,ContainerName,
                       [ProductionDate],
                [ExpiringDate],
                [ProductionBatch],
                [ManufacturingOrigin],
                [PropertyValue1],
                [PropertyValue2],
                [PropertyValue3],
                [PropertyValue4],
                [PropertyValue5],
                [PropertyValue6],
                WarehouseCode,AreaId, AreaCode,BillTypeName,InboundBillNumber
                    FROM dbo.Vw_StockLog WITH (NOLOCK)
            ]]>
    </select>

    <select id="StockLogView.GetByCondition" resultMap="StockLogView_Result" cacheModel="StockLogCache">
      <![CDATA[
                SELECT Id,LogType,LogTime,LinkBillType,LinkBillId,LinkBillNumber,WarehouseId,LocationId,,SkuNumber,LocationCode,ContainerCode
                       ContainerId,SkuId,PackId,BatchNumber,BeforeQty,InboundQty,OutboundQty,AfterQty,
                       LogTypeName,SkuName,PackName,WarehouseName,AreaName,LocationName,ContainerName,
                       [ProductionDate],
                [ExpiringDate],
                [ProductionBatch],
                [ManufacturingOrigin],
                [PropertyValue1],
                [PropertyValue2],
                [PropertyValue3],
                [PropertyValue4],
                [PropertyValue5],
                [PropertyValue6],
                WarehouseCode,AreaId, AreaCode,BillTypeName,InboundBillNumber
                    FROM dbo.Vw_StockLog WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <procedure id="StockLog.GetByPager" parameterMap="SplitPagerParameters" resultMap="StockLog_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <procedure id="StockLogView.GetByPager" parameterMap="SplitPagerParameters" resultMap="StockLogView_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <insert id="StockLog.Insert" parameterClass="StockLog">
      <![CDATA[
                INSERT INTO dbo.StockLog 
                    (LogType,LogTime,LinkBillType,LinkBillId,LinkBillNumber,WarehouseId,LocationId,ContainerId,SkuId,PackId,BatchNumber,BeforeQty,InboundQty,OutboundQty,AfterQty,InboundBillNumber) 
                VALUES 
                    (#LogType#,#LogTime#,#LinkBillType#,#LinkBillId#,#LinkBillNumber#,#WarehouseId#,#LocationId#,#ContainerId#,#SkuId#,#PackId#,#BatchNumber#,#BeforeQty#,#InboundQty#,#OutboundQty#,#AfterQty#,#InboundBillNumber#)
            ]]>
      <selectKey resultClass="int" type="post" property="Id">
        <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
      </selectKey>
    </insert>

    <update id="StockLog.Update" parameterClass="StockLog">
      <![CDATA[
                UPDATE dbo.StockLog SET LogType = #LogType#,LogTime = #LogTime#,LinkBillType = #LinkBillType#,LinkBillId = #LinkBillId#,LinkBillNumber=#LinkBillNumber#,WarehouseId = #WarehouseId#,LocationId = #LocationId#,ContainerId = #ContainerId#,SkuId = #SkuId#,PackId = #PackId#,BatchNumber = #BatchNumber#,BeforeQty = #BeforeQty#,InboundQty = #InboundQty#,OutboundQty = #OutboundQty#,AfterQty = #AfterQty#,InboundBillNumber=#InboundBillNumber#
                    WHERE Id = #Id#
            ]]>
    </update>

    <delete id="StockLog.Delete" parameterClass="StockLog">
      <![CDATA[
                DELETE FROM dbo.StockLog WHERE Id = #Id#
            ]]>
    </delete>

    <delete id="StockLog.DeleteAll" parameterClass="StockLog">
      <![CDATA[
                DELETE FROM dbo.StockLog
            ]]>
    </delete>
  </statements>
</sqlMap>