<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="Pack" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Pack" type="Business.Domain.Wms.Pack,Business.Domain" />
  </alias>
    
  <!-- 缓存机制 -->
  <cacheModels>
    <cacheModel id="PackCache" implementation="MEMORY">
      <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
      <flushInterval minutes="30" />
      <flushOnExecute statement="Pack.Insert" />
      <flushOnExecute statement="Pack.Update" />
      <flushOnExecute statement="Pack.Delete" />
      <flushOnExecute statement="Pack.DeleteAll" />
      <property name="Type" value="Weak" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap class="Pack" id="Pack_Result">
      <result column="PackId" property="PackId" />
      <result column="SkuId" property="SkuId" />
      <result column="PackLevel" property="PackLevel" />
      <result column="ParentId" property="ParentId" />
      <result column="PackName" property="PackName" />
      <result column="ToPieceQty" property="ToPieceQty" />
      <result column="Length" property="Length" />
      <result column="Width" property="Width" />
      <result column="Height" property="Height" />
      <result column="Weight" property="Weight" />
      <result column="DefaultPack" property="DefaultPack" />
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="SplitPagerParameters" class="Hashtable">
      <parameter property="TableName" column="TableName" />
      <parameter property="SelectFields" column="SelectFields" />
      <parameter property="OrderByField" column="OrderByField" />
      <parameter property="PageSize" column="PageSize" />
      <parameter property="PageIndex" column="PageIndex" />
      <parameter property="OrderType" column="OrderType" />
      <parameter property="SelectCondition" column="SelectCondition" />
      <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
    </parameterMap>
  </parameterMaps>

  <statements>
    <select id="Pack.Get" resultMap="Pack_Result" cacheModel="PackCache">
      <![CDATA[
                SELECT PackId,SkuId,PackLevel,ParentId,PackName,ToPieceQty,Length,Width,Height,Weight,DefaultPack FROM dbo.Pack WITH (NOLOCK)
                    WHERE PackId = #PackId#
            ]]>	
    </select>

    <select id="Pack.GetAll" resultMap="Pack_Result">
      <![CDATA[
                SELECT PackId,SkuId,PackLevel,ParentId,PackName,ToPieceQty,Length,Width,Height,Weight,DefaultPack
                    FROM dbo.Pack WITH (NOLOCK)
            ]]>
    </select>

    <select id="Pack.GetByCondition" resultMap="Pack_Result" cacheModel="PackCache">
      <![CDATA[
                SELECT PackId,SkuId,PackLevel,ParentId,PackName,ToPieceQty,Length,Width,Height,Weight,DefaultPack
                    FROM dbo.Pack WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <procedure id="Pack.GetByPager" parameterMap="SplitPagerParameters" resultMap="Pack_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <insert id="Pack.Insert" parameterClass="Pack">
      <![CDATA[
                INSERT INTO dbo.Pack 
                    (SkuId,PackLevel,ParentId,PackName,ToPieceQty,Length,Width,Height,Weight,DefaultPack) 
                VALUES 
                    (#SkuId#,#PackLevel#,#ParentId#,#PackName#,#ToPieceQty#,#Length#,#Width#,#Height#,#Weight#,#DefaultPack#)
            ]]>	
      <selectKey resultClass="int" type="post" property="PackId"> 
        <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
      </selectKey>
    </insert>

    <update id="Pack.Update" parameterClass="Pack">
      <![CDATA[
                UPDATE dbo.Pack SET SkuId = #SkuId#,PackLevel = #PackLevel#,ParentId = #ParentId#,PackName = #PackName#,ToPieceQty = #ToPieceQty#,Length = #Length#,Width = #Width#,Height = #Height#,Weight = #Weight#,DefaultPack = #DefaultPack#
                    WHERE PackId = #PackId#
            ]]>
    </update>

    <delete id="Pack.Delete" parameterClass="Pack">
      <![CDATA[
                DELETE FROM dbo.Pack WHERE PackId = #PackId#
            ]]>
    </delete>

    <delete id="Pack.DeleteAll" parameterClass="Pack">
      <![CDATA[
                DELETE FROM dbo.Pack
            ]]>
    </delete>
  </statements>
</sqlMap>