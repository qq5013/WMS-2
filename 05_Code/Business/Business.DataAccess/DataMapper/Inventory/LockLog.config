<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="LockLog" xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="LockLog" type="Business.Domain.Inventory.LockLog,Business.Domain" />
  </alias>

  <!-- 缓存机制 -->
  <cacheModels>
    <cacheModel id="LockLogCache" implementation="MEMORY">
      <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
      <flushInterval minutes="5" />
      <flushOnExecute statement="LockLog.Insert" />
      <flushOnExecute statement="LockLog.Update" />
      <flushOnExecute statement="LockLog.Delete" />
      <flushOnExecute statement="LockLog.DeleteAll" />
      <property name="Type" value="Weak" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap class="LockLog" id="LockLog_Result">
      <result column="LogId" property="LogId" />
      <result column="LogTime" property="LogTime" />
      <result column="LockLogType" property="LockLogType" />
      <result column="LockId" property="LockId" />
      <result column="LockTime" property="LockTime" />
      <result column="LockType" property="LockType" />
      <result column="LockMode" property="LockMode" />
      <result column="LockReason" property="LockReason" />
      <result column="Operator" property="Operator" />
      <result column="LockObject" property="LockObject" />
      <result column="WarehouseId" property="WarehouseId" />
      <result column="LocationId" property="LocationId" />
      <result column="ContainerId" property="ContainerId" />
      <result column="SkuId" property="SkuId" />
      <result column="PackId" property="PackId" />
      <result column="BatchNumber" property="BatchNumber" />
      <result column="Qty" property="Qty" />
      <result column="Remark" property="Remark" />
      <result column="CreateUser" property="CreateUser" />
      <result column="CreateTime" property="CreateTime" />
      <result column="EditUser" property="EditUser" />
      <result column="EditTime" property="EditTime" />
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="SplitPagerParameters" class="Hashtable">
      <parameter property="TableName" column="TableName" />
      <parameter property="SelectFields" column="SelectFields" />
      <parameter property="OrderByField" column="OrderByField" />
      <parameter property="PageSize" column="PageSize" />
      <parameter property="PageIndex" column="PageIndex" />
      <parameter property="OrderType" column="OrderType" />
      <parameter property="SelectCondition" column="SelectCondition" />
      <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
    </parameterMap>
  </parameterMaps>

  <statements>
    <select id="LockLog.Get" resultMap="LockLog_Result" cacheModel="LockLogCache">
      <![CDATA[
                SELECT LogId,LogTime,LockLogType,LockId,LockTime,LockType,LockMode,LockReason,Operator,LockObject,WarehouseId,LocationId,ContainerId,SkuId,PackId,BatchNumber,Qty,Remark,CreateUser,CreateTime,EditUser,EditTime FROM dbo.LockLog WITH (NOLOCK)
                    WHERE LogId = #LogId#
            ]]>
    </select>

    <select id="LockLog.GetAll" resultMap="LockLog_Result">
      <![CDATA[
                SELECT LogId,LogTime,LockLogType,LockId,LockTime,LockType,LockMode,LockReason,Operator,LockObject,WarehouseId,LocationId,ContainerId,SkuId,PackId,BatchNumber,Qty,Remark,CreateUser,CreateTime,EditUser,EditTime
                    FROM dbo.LockLog WITH (NOLOCK)
            ]]>
    </select>

    <select id="LockLog.GetByCondition" resultMap="LockLog_Result" cacheModel="LockLogCache">
      <![CDATA[
                SELECT LogId,LogTime,LockLogType,LockId,LockTime,LockType,LockMode,LockReason,Operator,LockObject,WarehouseId,LocationId,ContainerId,SkuId,PackId,BatchNumber,Qty,Remark,CreateUser,CreateTime,EditUser,EditTime
                    FROM dbo.LockLog WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <procedure id="LockLog.GetByPager" parameterMap="SplitPagerParameters" resultMap="LockLog_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <insert id="LockLog.Insert" parameterClass="LockLog">
      <![CDATA[
                INSERT INTO dbo.LockLog
                    (LogTime,LockLogType,LockId,LockTime,LockType,LockMode,LockReason,Operator,LockObject,WarehouseId,LocationId,ContainerId,SkuId,PackId,BatchNumber,Qty,Remark,CreateUser,CreateTime,EditUser,EditTime)
                VALUES
                    (#LogTime#,#LockLogType#,#LockId#,#LockTime#,#LockType#,#LockMode#,#LockReason#,#Operator#,#LockObject#,#WarehouseId#,#LocationId#,#ContainerId#,#SkuId#,#PackId#,#BatchNumber#,#Qty#,#Remark#,#CreateUser#,#CreateTime#,#EditUser#,#EditTime#)
            ]]>
      <selectKey resultClass="int" type="post" property="LogId">
        <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
      </selectKey>
    </insert>

    <update id="LockLog.Update" parameterClass="LockLog">
      <![CDATA[
                UPDATE dbo.LockLog SET LogTime = #LogTime#,LockLogType = #LockLogType#,LockId = #LockId#,LockTime = #LockTime#,LockType = #LockType#,LockMode = #LockMode#,LockReason = #LockReason#,Operator = #Operator#,LockObject = #LockObject#,WarehouseId = #WarehouseId#,LocationId = #LocationId#,ContainerId = #ContainerId#,SkuId = #SkuId#,PackId = #PackId#,BatchNumber=#BatchNumber#,Qty = #Qty#,Remark = #Remark#,CreateUser = #CreateUser#,CreateTime = #CreateTime#,EditUser = #EditUser#,EditTime = #EditTime#
                    WHERE LogId = #LogId#
            ]]>
    </update>

    <delete id="LockLog.Delete" parameterClass="LockLog">
      <![CDATA[
                DELETE FROM dbo.LockLog WHERE LogId = #LogId#
            ]]>
    </delete>

    <delete id="LockLog.DeleteAll" parameterClass="LockLog">
      <![CDATA[
                DELETE FROM dbo.LockLog
            ]]>
    </delete>
  </statements>
</sqlMap>