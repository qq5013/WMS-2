<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="PickBill" xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="PickBill" type="Business.Domain.Inventory.PickBill,Business.Domain" />
  </alias>
    
  <!-- 缓存机制 -->
  <cacheModels>
    <cacheModel id="PickBillCache" implementation="MEMORY">
      <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
      <flushInterval minutes="5" />
      <flushOnExecute statement="PickBill.Insert" />
      <flushOnExecute statement="PickBill.Update" />
      <flushOnExecute statement="PickBill.Delete" />
      <flushOnExecute statement="PickBill.DeleteAll" />
      <property name="Type" value="Weak" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap class="PickBill" id="PickBill_Result">
      <result column="BillId" property="BillId" />
      <result column="BillNumber" property="BillNumber" />
      <result column="PickMode" property="PickMode" />
      <result column="WarehouseId" property="WarehouseId" />
      <result column="Priority" property="Priority" />
      <result column="PlanPickTime" property="PlanPickTime" />
      <result column="PickTime" property="PickTime" />
      <result column="SortLocationId" property="SortLocationId" />
      <result column="Auditor" property="Auditor" />
      <result column="AuditTime" property="AuditTime" />
      <result column="BillStatus" property="BillStatus" />
      <result column="Remark" property="Remark" />
      <result column="CreateUser" property="CreateUser" />
      <result column="CreateTime" property="CreateTime" />
      <result column="EditUser" property="EditUser" />
      <result column="EditTime" property="EditTime" />
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="SplitPagerParameters" class="Hashtable">
      <parameter property="TableName" column="TableName" />
      <parameter property="SelectFields" column="SelectFields" />
      <parameter property="OrderByField" column="OrderByField" />
      <parameter property="PageSize" column="PageSize" />
      <parameter property="PageIndex" column="PageIndex" />
      <parameter property="OrderType" column="OrderType" />
      <parameter property="SelectCondition" column="SelectCondition" />
      <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
    </parameterMap>
  </parameterMaps>

  <statements>
    <select id="PickBill.Get" resultMap="PickBill_Result" cacheModel="PickBillCache">
      <![CDATA[
                SELECT BillId,BillNumber,PickMode,WarehouseId,Priority,PlanPickTime,PickTime,SortLocationId,Auditor,AuditTime,BillStatus,Remark,CreateUser,CreateTime,EditUser,EditTime FROM dbo.PickBill WITH (NOLOCK)
                    WHERE BillId = #BillId#
            ]]>	
    </select>

    <select id="PickBill.GetAll" resultMap="PickBill_Result">
      <![CDATA[
                SELECT BillId,BillNumber,PickMode,WarehouseId,Priority,PlanPickTime,PickTime,SortLocationId,Auditor,AuditTime,BillStatus,Remark,CreateUser,CreateTime,EditUser,EditTime
                    FROM dbo.PickBill WITH (NOLOCK)
            ]]>
    </select>

    <select id="PickBill.GetByCondition" resultMap="PickBill_Result" cacheModel="PickBillCache">
      <![CDATA[
                SELECT BillId,BillNumber,PickMode,WarehouseId,Priority,PlanPickTime,PickTime,SortLocationId,Auditor,AuditTime,BillStatus,Remark,CreateUser,CreateTime,EditUser,EditTime
                    FROM dbo.PickBill WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <procedure id="PickBill.GetByPager" parameterMap="SplitPagerParameters" resultMap="PickBill_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <insert id="PickBill.Insert" parameterClass="PickBill">
      <![CDATA[
                INSERT INTO dbo.PickBill 
                    (BillNumber,PickMode,WarehouseId,Priority,PlanPickTime,PickTime,SortLocationId,Auditor,AuditTime,BillStatus,Remark,CreateUser,CreateTime,EditUser,EditTime) 
                VALUES 
                    (#BillNumber#,#PickMode#,#WarehouseId#,#Priority#,#PlanPickTime#,#PickTime#,#SortLocationId#,#Auditor#,#AuditTime#,#BillStatus#,#Remark#,#CreateUser#,#CreateTime#,#EditUser#,#EditTime#)
            ]]>	
      <selectKey resultClass="int" type="post" property="BillId"> 
        <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
      </selectKey>
    </insert>

    <update id="PickBill.Update" parameterClass="PickBill">
      <![CDATA[
                UPDATE dbo.PickBill SET BillNumber = #BillNumber#,PickMode = #PickMode#,WarehouseId = #WarehouseId#,Priority = #Priority#,PlanPickTime = #PlanPickTime#,PickTime = #PickTime#,SortLocationId = #SortLocationId#,Auditor = #Auditor#,AuditTime = #AuditTime#,BillStatus = #BillStatus#,Remark = #Remark#,CreateUser = #CreateUser#,CreateTime = #CreateTime#,EditUser = #EditUser#,EditTime = #EditTime#
                    WHERE BillId = #BillId#
            ]]>
    </update>

    <delete id="PickBill.Delete" parameterClass="PickBill">
      <![CDATA[
                DELETE FROM dbo.PickBill WHERE BillId = #BillId#
            ]]>
    </delete>

    <delete id="PickBill.DeleteAll" parameterClass="PickBill">
      <![CDATA[
                DELETE FROM dbo.PickBill
            ]]>
    </delete>
  </statements>
</sqlMap>