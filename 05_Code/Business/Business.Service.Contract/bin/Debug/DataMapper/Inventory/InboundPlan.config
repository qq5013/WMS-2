<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="InboundPlan" xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="InboundPlan" type="Business.Domain.Inventory.InboundPlan,Business.Domain" />
  </alias>
    
  <!-- 缓存机制 -->
  <cacheModels>
    <cacheModel id="InboundPlanCache" implementation="MEMORY">
      <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
      <flushInterval minutes="5" />
      <flushOnExecute statement="InboundPlan.Insert" />
      <flushOnExecute statement="InboundPlan.Update" />
      <flushOnExecute statement="InboundPlan.Delete" />
      <flushOnExecute statement="InboundPlan.DeleteAll" />
      <property name="Type" value="Weak" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap class="InboundPlan" id="InboundPlan_Result">
      <result column="PlanId" property="PlanId" />
      <result column="PlanNumber" property="PlanNumber" />
      <result column="WarehouseId" property="WarehouseId" />
      <result column="InboundType" property="InboundType" />
      <result column="Priority" property="Priority" />
      <result column="LinkBillType" property="LinkBillType" />
      <result column="LinkBillNumber" property="LinkBillNumber" />
      <result column="ClientId" property="ClientId" />
      <result column="MerchantId" property="MerchantId" />
      <result column="VendorId" property="VendorId" />
      <result column="PlanReceiveTime" property="PlanReceiveTime" />
      <result column="IsCrossDock" property="IsCrossDock" />
      <result column="Auditor" property="Auditor" />
      <result column="AuditTime" property="AuditTime" />
      <result column="BillStatus" property="BillStatus" />
      <result column="Remark" property="Remark" />
      <result column="CreateUser" property="CreateUser" />
      <result column="CreateTime" property="CreateTime" />
      <result column="EditUser" property="EditUser" />
      <result column="EditTime" property="EditTime" />
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="SplitPagerParameters" class="Hashtable">
      <parameter property="TableName" column="TableName" />
      <parameter property="SelectFields" column="SelectFields" />
      <parameter property="OrderByField" column="OrderByField" />
      <parameter property="PageSize" column="PageSize" />
      <parameter property="PageIndex" column="PageIndex" />
      <parameter property="OrderType" column="OrderType" />
      <parameter property="SelectCondition" column="SelectCondition" />
      <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
    </parameterMap>
  </parameterMaps>

  <statements>
    <select id="InboundPlan.Get" resultMap="InboundPlan_Result" cacheModel="InboundPlanCache">
      <![CDATA[
                SELECT PlanId,PlanNumber,WarehouseId,InboundType,Priority,LinkBillType,LinkBillNumber,ClientId,MerchantId,VendorId,PlanReceiveTime,IsCrossDock,Auditor,AuditTime,BillStatus,Remark,CreateUser,CreateTime,EditUser,EditTime FROM dbo.InboundPlan WITH (NOLOCK)
                    WHERE PlanId = #PlanId#
            ]]>	
    </select>

    <select id="InboundPlan.GetAll" resultMap="InboundPlan_Result">
      <![CDATA[
                SELECT PlanId,PlanNumber,WarehouseId,InboundType,Priority,LinkBillType,LinkBillNumber,ClientId,MerchantId,VendorId,PlanReceiveTime,IsCrossDock,Auditor,AuditTime,BillStatus,Remark,CreateUser,CreateTime,EditUser,EditTime
                    FROM dbo.InboundPlan WITH (NOLOCK)
            ]]>
    </select>

    <select id="InboundPlan.GetByCondition" resultMap="InboundPlan_Result" cacheModel="InboundPlanCache">
      <![CDATA[
                SELECT PlanId,PlanNumber,WarehouseId,InboundType,Priority,LinkBillType,LinkBillNumber,ClientId,MerchantId,VendorId,PlanReceiveTime,IsCrossDock,Auditor,AuditTime,BillStatus,Remark,CreateUser,CreateTime,EditUser,EditTime
                    FROM dbo.InboundPlan WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <procedure id="InboundPlan.GetByPager" parameterMap="SplitPagerParameters" resultMap="InboundPlan_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <insert id="InboundPlan.Insert" parameterClass="InboundPlan">
      <![CDATA[
                INSERT INTO dbo.InboundPlan 
                    (PlanNumber,WarehouseId,InboundType,Priority,LinkBillType,LinkBillNumber,ClientId,MerchantId,VendorId,PlanReceiveTime,IsCrossDock,Auditor,AuditTime,BillStatus,Remark,CreateUser,CreateTime,EditUser,EditTime) 
                VALUES 
                    (#PlanNumber#,#WarehouseId#,#InboundType#,#Priority#,#LinkBillType#,#LinkBillNumber#,#ClientId#,#MerchantId#,#VendorId#,#PlanReceiveTime#,#IsCrossDock#,#Auditor#,#AuditTime#,#BillStatus#,#Remark#,#CreateUser#,#CreateTime#,#EditUser#,#EditTime#)
            ]]>	
      <selectKey resultClass="int" type="post" property="PlanId"> 
        <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
      </selectKey>
    </insert>

    <update id="InboundPlan.Update" parameterClass="InboundPlan">
      <![CDATA[
                UPDATE dbo.InboundPlan SET PlanNumber = #PlanNumber#,WarehouseId = #WarehouseId#,InboundType = #InboundType#,Priority = #Priority#,LinkBillType = #LinkBillType#,LinkBillNumber = #LinkBillNumber#,ClientId = #ClientId#,MerchantId = #MerchantId#,VendorId = #VendorId#,PlanReceiveTime = #PlanReceiveTime#,IsCrossDock = #IsCrossDock#,Auditor = #Auditor#,AuditTime = #AuditTime#,BillStatus = #BillStatus#,Remark = #Remark#,CreateUser = #CreateUser#,CreateTime = #CreateTime#,EditUser = #EditUser#,EditTime = #EditTime#
                    WHERE PlanId = #PlanId#
            ]]>
    </update>

    <delete id="InboundPlan.Delete" parameterClass="InboundPlan">
      <![CDATA[
                DELETE FROM dbo.InboundPlan WHERE PlanId = #PlanId#
            ]]>
    </delete>

    <delete id="InboundPlan.DeleteAll" parameterClass="InboundPlan">
      <![CDATA[
                DELETE FROM dbo.InboundPlan
            ]]>
    </delete>
  </statements>
</sqlMap>