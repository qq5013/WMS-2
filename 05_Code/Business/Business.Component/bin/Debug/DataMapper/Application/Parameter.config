<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="Parameter" xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Parameter" type="Business.Domain.Application.Parameter,Business.Domain" />
  </alias>
    
  <!-- 缓存机制 -->
  <cacheModels>
    <cacheModel id="ParameterCache" implementation="MEMORY">
      <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
      <flushInterval minutes="30" />
      <flushOnExecute statement="Parameter.Insert" />
      <flushOnExecute statement="Parameter.Update" />
      <flushOnExecute statement="Parameter.Delete" />
      <flushOnExecute statement="Parameter.DeleteAll" />
      <property name="Type" value="Weak" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap class="Parameter" id="Parameter_Result">
      <result column="ApplicationId" property="ApplicationId" />
      <result column="ParameterId" property="ParameterId" />
      <result column="ParameterCode" property="ParameterCode" />
      <result column="ValueType" property="ValueType" />
      <result column="ParameterValue" property="ParameterValue" />
      <result column="Remark" property="Remark" />
      <result column="IsActive" property="IsActive" />
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="SplitPagerParameters" class="Hashtable">
      <parameter property="TableName" column="TableName" />
      <parameter property="SelectFields" column="SelectFields" />
      <parameter property="OrderByField" column="OrderByField" />
      <parameter property="PageSize" column="PageSize" />
      <parameter property="PageIndex" column="PageIndex" />
      <parameter property="OrderType" column="OrderType" />
      <parameter property="SelectCondition" column="SelectCondition" />
      <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
    </parameterMap>
  </parameterMaps>

  <statements>
    <select id="Parameter.Get" resultMap="Parameter_Result" cacheModel="ParameterCache">
      <![CDATA[
                SELECT ApplicationId,ParameterId,ParameterCode,ValueType,ParameterValue,Remark,IsActive FROM dbo.Parameter WITH (NOLOCK)
                    WHERE ParameterId = #ParameterId#
            ]]>	
    </select>

    <select id="Parameter.GetAll" resultMap="Parameter_Result">
      <![CDATA[
                SELECT ApplicationId,ParameterId,ParameterCode,ValueType,ParameterValue,Remark,IsActive
                    FROM dbo.Parameter WITH (NOLOCK)
            ]]>
    </select>

    <select id="Parameter.GetByCondition" resultMap="Parameter_Result" cacheModel="ParameterCache">
      <![CDATA[
                SELECT ApplicationId,ParameterId,ParameterCode,ValueType,ParameterValue,Remark,IsActive
                    FROM dbo.Parameter WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <procedure id="Parameter.GetByPager" parameterMap="SplitPagerParameters" resultMap="Parameter_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <insert id="Parameter.Insert" parameterClass="Parameter">
      <![CDATA[
                INSERT INTO dbo.Parameter 
                    (ApplicationId,ParameterCode,ValueType,ParameterValue,Remark,IsActive) 
                VALUES 
                    (#ApplicationId#,#ParameterCode#,#ValueType#,#ParameterValue#,#Remark#,#IsActive#)
            ]]>	
      <selectKey resultClass="int" type="post" property="ParameterId"> 
        <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
      </selectKey>
    </insert>

    <update id="Parameter.Update" parameterClass="Parameter">
      <![CDATA[
                UPDATE dbo.Parameter SET ApplicationId = #ApplicationId#,ParameterCode = #ParameterCode#,ValueType = #ValueType#,ParameterValue = #ParameterValue#,Remark = #Remark#,IsActive = #IsActive#
                    WHERE ParameterId = #ParameterId#
            ]]>
    </update>

    <delete id="Parameter.Delete" parameterClass="Parameter">
      <![CDATA[
                DELETE FROM dbo.Parameter WHERE ParameterId = #ParameterId#
            ]]>
    </delete>

    <delete id="Parameter.DeleteAll" parameterClass="Parameter">
      <![CDATA[
                DELETE FROM dbo.Parameter
            ]]>
    </delete>
  </statements>
</sqlMap>