<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="Area" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Area" type="Business.Domain.Warehouse.Area,Business.Domain" />
  </alias>

  <!-- 缓存机制 -->
  <cacheModels>
    <cacheModel id="AreaCache" implementation="MEMORY">
      <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
      <flushInterval minutes="5" />
      <flushOnExecute statement="Area.Insert" />
      <flushOnExecute statement="Area.Update" />
      <flushOnExecute statement="Area.Delete" />
      <flushOnExecute statement="Area.DeleteAll" />
      <property name="Type" value="Weak" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap class="Area" id="Area_Result">
      <result column="AreaId" property="AreaId" />
      <result column="AreaCode" property="AreaCode" />
      <result column="AreaName" property="AreaName" />
      <result column="WarehouseId" property="WarehouseId" />
      <result column="AreaType" property="AreaType" />
      <result column="CoordX" property="CoordX" />
      <result column="CoordY" property="CoordY" />
      <result column="CoordZ" property="CoordZ" />
      <result column="Length" property="Length" />
      <result column="Width" property="Width" />
      <result column="Height" property="Height" />
      <result column="Remark" property="Remark" />
      <result column="CreateUser" property="CreateUser" />
      <result column="CreateTime" property="CreateTime" />
      <result column="EditUser" property="EditUser" />
      <result column="EditTime" property="EditTime" />
      <result column="IsActive" property="IsActive" />
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="SplitPagerParameters" class="Hashtable">
      <parameter property="TableName" column="TableName" />
      <parameter property="SelectFields" column="SelectFields" />
      <parameter property="OrderByField" column="OrderByField" />
      <parameter property="PageSize" column="PageSize" />
      <parameter property="PageIndex" column="PageIndex" />
      <parameter property="OrderType" column="OrderType" />
      <parameter property="SelectCondition" column="SelectCondition" />
      <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
    </parameterMap>
  </parameterMaps>

  <statements>
    <select id="Area.Get" resultMap="Area_Result" cacheModel="AreaCache">
      <![CDATA[
                SELECT AreaId,AreaCode,AreaName,WarehouseId,AreaType,CoordX,CoordY,CoordZ,Length,Width,Height,Remark,CreateUser,CreateTime,EditUser,EditTime,IsActive FROM dbo.Area WITH (NOLOCK)
                    WHERE AreaId = #AreaId#
            ]]>
    </select>

    <select id="Area.GetAll" resultMap="Area_Result">
      <![CDATA[
                SELECT AreaId,AreaCode,AreaName,WarehouseId,AreaType,CoordX,CoordY,CoordZ,Length,Width,Height,Remark,CreateUser,CreateTime,EditUser,EditTime,IsActive
                    FROM dbo.Area WITH (NOLOCK)
            ]]>
    </select>

    <select id="Area.GetByCondition" resultMap="Area_Result" cacheModel="AreaCache">
      <![CDATA[
                SELECT AreaId,AreaCode,AreaName,WarehouseId,AreaType,CoordX,CoordY,CoordZ,Length,Width,Height,Remark,CreateUser,CreateTime,EditUser,EditTime,IsActive
                    FROM dbo.Area WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <procedure id="Area.GetByPager" parameterMap="SplitPagerParameters" resultMap="Area_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <insert id="Area.Insert" parameterClass="Area">
      <![CDATA[
                INSERT INTO dbo.Area 
                    (AreaCode,AreaName,WarehouseId,AreaType,CoordX,CoordY,CoordZ,Length,Width,Height,Remark,CreateUser,CreateTime,EditUser,EditTime,IsActive) 
                VALUES 
                    (#AreaCode#,#AreaName#,#WarehouseId#,#AreaType#,#CoordX#,#CoordY#,#CoordZ#,#Length#,#Width#,#Height#,#Remark#,#CreateUser#,#CreateTime#,#EditUser#,#EditTime#,#IsActive#)
            ]]>
      <selectKey resultClass="int" type="post" property="AreaId">
        <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
      </selectKey>
    </insert>

    <update id="Area.Update" parameterClass="Area">
      <![CDATA[
                UPDATE dbo.Area SET AreaCode = #AreaCode#,AreaName = #AreaName#,WarehouseId = #WarehouseId#,AreaType = #AreaType#,CoordX = #CoordX#,CoordY = #CoordY#,CoordZ = #CoordZ#,Length = #Length#,Width = #Width#,Height = #Height#,Remark = #Remark#,CreateUser = #CreateUser#,CreateTime = #CreateTime#,EditUser = #EditUser#,EditTime = #EditTime#,IsActive = #IsActive#
                    WHERE AreaId = #AreaId#
            ]]>
    </update>

    <delete id="Area.Delete" parameterClass="Area">
      <![CDATA[
                DELETE FROM dbo.Area WHERE AreaId = #AreaId#
            ]]>
    </delete>

    <delete id="Area.DeleteAll" parameterClass="Area">
      <![CDATA[
                DELETE FROM dbo.Area
            ]]>
    </delete>

    <!--<select id="Area.GetGroups" resultMap="OperatorGroup_Result">
      <![CDATA[
                SELECT og.GroupId,og.GroupName,og.WarehouseId,og.OperationType,og.Remark,og.CreateUser,og.CreateTime,og.EditUser,og.EditTime,og.IsActive 
                FROM dbo.OperatorGroup og WITH (NOLOCK)
                INNER JOIN dbo.AreaGroup ag ON ag.GroupId = og.GroupId
                WHERE ag.AreaId = #AreaId#
            ]]>
    </select>-->
  </statements>
</sqlMap>