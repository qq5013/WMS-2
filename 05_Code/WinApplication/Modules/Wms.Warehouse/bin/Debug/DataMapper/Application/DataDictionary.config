<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="DataDictionary" xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="DataDictionary" type="Business.Domain.Application.DataDictionary,Business.Domain" />
  </alias>
    
  <!-- 缓存机制 -->
  <cacheModels>
    <cacheModel id="DataDictionaryCache" implementation="MEMORY">
      <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
      <flushInterval minutes="30" />
      <flushOnExecute statement="DataDictionary.Insert" />
      <flushOnExecute statement="DataDictionary.Update" />
      <flushOnExecute statement="DataDictionary.Delete" />
      <flushOnExecute statement="DataDictionary.DeleteAll" />
      <property name="Type" value="Weak" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap class="DataDictionary" id="DataDictionary_Result">
      <result column="ApplicationId" property="ApplicationId" />
      <result column="DictionaryId" property="DictionaryId" />
      <result column="DictionaryLevel" property="DictionaryLevel" />
      <result column="ParentId" property="ParentId" />
      <result column="Category" property="Category" />
      <result column="DictionaryCode" property="DictionaryCode" />
      <result column="DictionaryValue" property="DictionaryValue" />
      <result column="Remark" property="Remark" />
      <result column="IsActive" property="IsActive" />
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="SplitPagerParameters" class="Hashtable">
      <parameter property="TableName" column="TableName" />
      <parameter property="SelectFields" column="SelectFields" />
      <parameter property="OrderByField" column="OrderByField" />
      <parameter property="PageSize" column="PageSize" />
      <parameter property="PageIndex" column="PageIndex" />
      <parameter property="OrderType" column="OrderType" />
      <parameter property="SelectCondition" column="SelectCondition" />
      <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
    </parameterMap>
  </parameterMaps>

  <statements>
    <select id="DataDictionary.Get" resultMap="DataDictionary_Result" cacheModel="DataDictionaryCache">
      <![CDATA[
                SELECT ApplicationId,DictionaryId,DictionaryLevel,ParentId,Category,DictionaryCode,DictionaryValue,Remark,IsActive FROM dbo.DataDictionary WITH (NOLOCK)
                    WHERE DictionaryId = #DictionaryId#
            ]]>	
    </select>

    <select id="DataDictionary.GetAll" resultMap="DataDictionary_Result">
      <![CDATA[
                SELECT ApplicationId,DictionaryId,DictionaryLevel,ParentId,Category,DictionaryCode,DictionaryValue,Remark,IsActive
                    FROM dbo.DataDictionary WITH (NOLOCK)
            ]]>
    </select>

    <select id="DataDictionary.GetByCondition" resultMap="DataDictionary_Result" cacheModel="DataDictionaryCache">
      <![CDATA[
                SELECT ApplicationId,DictionaryId,DictionaryLevel,ParentId,Category,DictionaryCode,DictionaryValue,Remark,IsActive
                    FROM dbo.DataDictionary WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <procedure id="DataDictionary.GetByPager" parameterMap="SplitPagerParameters" resultMap="DataDictionary_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <insert id="DataDictionary.Insert" parameterClass="DataDictionary">
      <![CDATA[
                INSERT INTO dbo.DataDictionary 
                    (ApplicationId,DictionaryLevel,ParentId,Category,DictionaryCode,DictionaryValue,Remark,IsActive) 
                VALUES 
                    (#ApplicationId#,#DictionaryLevel#,#ParentId#,#Category#,#DictionaryCode#,#DictionaryValue#,#Remark#,#IsActive#)
            ]]>	
      <selectKey resultClass="int" type="post" property="DictionaryId"> 
        <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
      </selectKey>
    </insert>

    <update id="DataDictionary.Update" parameterClass="DataDictionary">
      <![CDATA[
                UPDATE dbo.DataDictionary SET ApplicationId = #ApplicationId#,DictionaryLevel = #DictionaryLevel#,ParentId = #ParentId#,Category = #Category#,DictionaryCode = #DictionaryCode#,DictionaryValue = #DictionaryValue#,Remark = #Remark#,IsActive = #IsActive#
                    WHERE DictionaryId = #DictionaryId#
            ]]>
    </update>

    <delete id="DataDictionary.Delete" parameterClass="DataDictionary">
      <![CDATA[
                DELETE FROM dbo.DataDictionary WHERE DictionaryId = #DictionaryId#
            ]]>
    </delete>

    <delete id="DataDictionary.DeleteAll" parameterClass="DataDictionary">
      <![CDATA[
                DELETE FROM dbo.DataDictionary
            ]]>
    </delete>
  </statements>
</sqlMap>