<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="Setting" xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Setting" type="Business.Domain.Warehouse.Setting,Business.Domain" />
  </alias>
    
  <!-- 缓存机制 -->
  <cacheModels>
    <cacheModel id="SettingCache" implementation="MEMORY">
      <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
      <flushInterval minutes="30" />
      <flushOnExecute statement="Setting.Insert" />
      <flushOnExecute statement="Setting.Update" />
      <flushOnExecute statement="Setting.Delete" />
      <flushOnExecute statement="Setting.DeleteAll" />
      <property name="Type" value="Weak" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap class="Setting" id="Setting_Result">
      <result column="SettingId" property="SettingId" />
      <result column="SettingCode" property="SettingCode" />
      <result column="WarehouseId" property="WarehouseId" />
      <result column="ValueType" property="ValueType" />
      <result column="SettingValue" property="SettingValue" />
      <result column="Remark" property="Remark" />
      <result column="CreateUser" property="CreateUser" />
      <result column="CreateTime" property="CreateTime" />
      <result column="EditUser" property="EditUser" />
      <result column="EditTime" property="EditTime" />
      <result column="IsActive" property="IsActive" />
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="SplitPagerParameters" class="Hashtable">
      <parameter property="TableName" column="TableName" />
      <parameter property="SelectFields" column="SelectFields" />
      <parameter property="OrderByField" column="OrderByField" />
      <parameter property="PageSize" column="PageSize" />
      <parameter property="PageIndex" column="PageIndex" />
      <parameter property="OrderType" column="OrderType" />
      <parameter property="SelectCondition" column="SelectCondition" />
      <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
    </parameterMap>
  </parameterMaps>

  <statements>
    <select id="Setting.Get" resultMap="Setting_Result" cacheModel="SettingCache">
      <![CDATA[
                SELECT SettingId,SettingCode,WarehouseId,ValueType,SettingValue,Remark,CreateUser,CreateTime,EditUser,EditTime,IsActive FROM dbo.Setting WITH (NOLOCK)
                    WHERE SettingId = #SettingId#
            ]]>	
    </select>

    <select id="Setting.GetAll" resultMap="Setting_Result">
      <![CDATA[
                SELECT SettingId,SettingCode,WarehouseId,ValueType,SettingValue,Remark,CreateUser,CreateTime,EditUser,EditTime,IsActive
                    FROM dbo.Setting WITH (NOLOCK)
            ]]>
    </select>

    <select id="Setting.GetByCondition" resultMap="Setting_Result" cacheModel="SettingCache">
      <![CDATA[
                SELECT SettingId,SettingCode,WarehouseId,ValueType,SettingValue,Remark,CreateUser,CreateTime,EditUser,EditTime,IsActive
                    FROM dbo.Setting WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <procedure id="Setting.GetByPager" parameterMap="SplitPagerParameters" resultMap="Setting_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <insert id="Setting.Insert" parameterClass="Setting">
      <![CDATA[
                INSERT INTO dbo.Setting 
                    (SettingCode,WarehouseId,ValueType,SettingValue,Remark,CreateUser,CreateTime,EditUser,EditTime,IsActive) 
                VALUES 
                    (#SettingCode#,#WarehouseId#,#ValueType#,#SettingValue#,#Remark#,#CreateUser#,#CreateTime#,#EditUser#,#EditTime#,#IsActive#)
            ]]>	
      <selectKey resultClass="int" type="post" property="SettingId"> 
        <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
      </selectKey>
    </insert>

    <update id="Setting.Update" parameterClass="Setting">
      <![CDATA[
                UPDATE dbo.Setting SET SettingCode = #SettingCode#,WarehouseId = #WarehouseId#,ValueType = #ValueType#,SettingValue = #SettingValue#,Remark = #Remark#,CreateUser = #CreateUser#,CreateTime = #CreateTime#,EditUser = #EditUser#,EditTime = #EditTime#,IsActive = #IsActive#
                    WHERE SettingId = #SettingId#
            ]]>
    </update>

    <delete id="Setting.Delete" parameterClass="Setting">
      <![CDATA[
                DELETE FROM dbo.Setting WHERE SettingId = #SettingId#
            ]]>
    </delete>

    <delete id="Setting.DeleteAll" parameterClass="Setting">
      <![CDATA[
                DELETE FROM dbo.Setting
            ]]>
    </delete>
  </statements>
</sqlMap>