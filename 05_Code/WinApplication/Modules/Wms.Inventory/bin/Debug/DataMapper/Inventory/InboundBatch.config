<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="InboundBatch" xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="InboundBatch" type="Business.Domain.Inventory.InboundBatch,Business.Domain" />
  </alias>

  <!-- 缓存机制 -->
  <cacheModels>
    <cacheModel id="InboundBatchCache" implementation="MEMORY">
      <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
      <flushInterval minutes="30" />
      <flushOnExecute statement="InboundBatch.Insert" />
      <flushOnExecute statement="InboundBatch.Update" />
      <flushOnExecute statement="InboundBatch.Delete" />
      <flushOnExecute statement="InboundBatch.DeleteAll" />
      <property name="Type" value="Weak" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap class="InboundBatch" id="InboundBatch_Result">
      <result column="Id" property="Id" />
      <result column="WarehouseId" property="WarehouseId" />
      <result column="PlanNumber" property="PlanNumber" />
      <result column="BillNumber" property="BillNumber" />
      <result column="BatchNumber" property="BatchNumber" />
      <result column="InboundDate" property="InboundDate" />
      <result column="SkuId" property="SkuId" />
      <result column="Qty" property="Qty" />
      <result column="ProductionDate" property="ProductionDate" />
      <result column="ExpiringDate" property="ExpiringDate" />
      <result column="ProductionBatch" property="ProductionBatch" />
      <result column="ManufacturingOrigin" property="ManufacturingOrigin" />
      <result column="PropertyValue1" property="PropertyValue1" />
      <result column="PropertyValue2" property="PropertyValue2" />
      <result column="PropertyValue3" property="PropertyValue3" />
      <result column="PropertyValue4" property="PropertyValue4" />
      <result column="PropertyValue5" property="PropertyValue5" />
      <result column="PropertyValue6" property="PropertyValue6" />
      <result column="CreateUser" property="CreateUser" />
      <result column="CreateTime" property="CreateTime" />
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="SplitPagerParameters" class="Hashtable">
      <parameter property="TableName" column="TableName" />
      <parameter property="SelectFields" column="SelectFields" />
      <parameter property="OrderByField" column="OrderByField" />
      <parameter property="PageSize" column="PageSize" />
      <parameter property="PageIndex" column="PageIndex" />
      <parameter property="OrderType" column="OrderType" />
      <parameter property="SelectCondition" column="SelectCondition" />
      <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
    </parameterMap>
  </parameterMaps>

  <statements>
    <select id="InboundBatch.Get" resultMap="InboundBatch_Result" cacheModel="InboundBatchCache">
      <![CDATA[
                SELECT Id,WarehouseId,PlanNumber,BillNumber,BatchNumber,InboundDate,SkuId,Qty,ProductionDate,ExpiringDate,ProductionBatch,ManufacturingOrigin,PropertyValue1,PropertyValue2,PropertyValue3,PropertyValue4,PropertyValue5,PropertyValue6,CreateUser,CreateTime FROM dbo.InboundBatch WITH (NOLOCK)
                    WHERE Id = #Id#
            ]]>
    </select>

    <select id="InboundBatch.GetAll" resultMap="InboundBatch_Result">
      <![CDATA[
                SELECT Id,WarehouseId,PlanNumber,BillNumber,BatchNumber,InboundDate,SkuId,Qty,ProductionDate,ExpiringDate,ProductionBatch,ManufacturingOrigin,PropertyValue1,PropertyValue2,PropertyValue3,PropertyValue4,PropertyValue5,PropertyValue6,CreateUser,CreateTime
                    FROM dbo.InboundBatch WITH (NOLOCK)
            ]]>
    </select>

    <select id="InboundBatch.GetByCondition" resultMap="InboundBatch_Result" cacheModel="InboundBatchCache">
      <![CDATA[
                SELECT Id,WarehouseId,PlanNumber,BillNumber,BatchNumber,InboundDate,SkuId,Qty,ProductionDate,ExpiringDate,ProductionBatch,ManufacturingOrigin,PropertyValue1,PropertyValue2,PropertyValue3,PropertyValue4,PropertyValue5,PropertyValue6,CreateUser,CreateTime
                    FROM dbo.InboundBatch WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <procedure id="InboundBatch.GetByPager" parameterMap="SplitPagerParameters" resultMap="InboundBatch_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <insert id="InboundBatch.Insert" parameterClass="InboundBatch">
      <![CDATA[
                INSERT INTO dbo.InboundBatch 
                    (WarehouseId,PlanNumber,BillNumber,BatchNumber,InboundDate,SkuId,Qty,ProductionDate,ExpiringDate,ProductionBatch,ManufacturingOrigin,PropertyValue1,PropertyValue2,PropertyValue3,PropertyValue4,PropertyValue5,PropertyValue6,CreateUser,CreateTime) 
                VALUES 
                    (#WarehouseId#,#PlanNumber#,#BillNumber#,#BatchNumber#,#InboundDate#,#SkuId#,#Qty#,#ProductionDate#,#ExpiringDate#,#ProductionBatch#,#ManufacturingOrigin#,#PropertyValue1#,#PropertyValue2#,#PropertyValue3#,#PropertyValue4#,#PropertyValue5#,#PropertyValue6#,#CreateUser#,#CreateTime#)
            ]]>
      <selectKey resultClass="int" type="post" property="Id">
        <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
      </selectKey>
    </insert>

    <update id="InboundBatch.Update" parameterClass="InboundBatch">
      <![CDATA[
                UPDATE dbo.InboundBatch SET WarehouseId = #WarehouseId#,PlanNumber = #PlanNumber#,BillNumber = #BillNumber#,BatchNumber = #BatchNumber#,InboundDate = #InboundDate#,SkuId = #SkuId#,Qty = #Qty#,ProductionDate = #ProductionDate#,ExpiringDate = #ExpiringDate#,ProductionBatch = #ProductionBatch#,ManufacturingOrigin = #ManufacturingOrigin#,PropertyValue1 = #PropertyValue1#,PropertyValue2 = #PropertyValue2#,PropertyValue3 = #PropertyValue3#,PropertyValue4 = #PropertyValue4#,PropertyValue5 = #PropertyValue5#,PropertyValue6 = #PropertyValue6#,CreateUser = #CreateUser#,CreateTime = #CreateTime#
                    WHERE Id = #Id#
            ]]>
    </update>

    <delete id="InboundBatch.Delete" parameterClass="InboundBatch">
      <![CDATA[
                DELETE FROM dbo.InboundBatch WHERE Id = #Id#
            ]]>
    </delete>

    <delete id="InboundBatch.DeleteAll" parameterClass="InboundBatch">
      <![CDATA[
                DELETE FROM dbo.InboundBatch
            ]]>
    </delete>
  </statements>
</sqlMap>