<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="InboundTaskDetail" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="InboundTaskDetail" type="Business.Domain.Inventory.InboundTaskDetail,Business.Domain"/>
    </alias>
    
    <!-- 缓存机制 -->
    <cacheModels>
      <cacheModel id="InboundTaskDetailCache" implementation="MEMORY">
        <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
        <flushInterval minutes="5"/>
        <flushOnExecute statement="InboundTaskDetail.Insert"/>
        <flushOnExecute statement="InboundTaskDetail.Update"/>
        <flushOnExecute statement="InboundTaskDetail.Delete"/>
        <flushOnExecute statement="InboundTaskDetail.DeleteAll"/>
        <property name="Type" value="Weak"/>
      </cacheModel>
    </cacheModels>

    <resultMaps>
        <resultMap class="InboundTaskDetail" id="InboundTaskDetail_Result">
			<result column="Id" property="Id" />
			<result column="TaskId" property="TaskId" />
			<result column="SkuId" property="SkuId" />
			<result column="PackId" property="PackId" />
			<result column="IsBatchManagement" property="IsBatchManagement" />
			<result column="Qty" property="Qty" />
        </resultMap>
    </resultMaps>
    
    <parameterMaps>
        <parameterMap id="SplitPagerParameters" class="Hashtable">
            <parameter property="TableName" column="TableName" />
            <parameter property="SelectFields" column="SelectFields" />
            <parameter property="OrderByField" column="OrderByField" />
            <parameter property="PageSize" column="PageSize" />
            <parameter property="PageIndex" column="PageIndex" />
            <parameter property="OrderType" column="OrderType" />
            <parameter property="SelectCondition" column="SelectCondition" />
            <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
        </parameterMap>
    </parameterMaps>
    
    <statements>
        <select id="InboundTaskDetail.Get" resultMap="InboundTaskDetail_Result" cacheModel="InboundTaskDetailCache">
            <![CDATA[
                SELECT Id,TaskId,SkuId,PackId,IsBatchManagement,Qty FROM dbo.InboundTaskDetail WITH (NOLOCK)
                    WHERE Id = #Id#
            ]]>	
        </select>
        
        <select id="InboundTaskDetail.GetAll" resultMap="InboundTaskDetail_Result" >
            <![CDATA[
                SELECT Id,TaskId,SkuId,PackId,IsBatchManagement,Qty
                    FROM dbo.InboundTaskDetail WITH (NOLOCK)
            ]]>
        </select>
        
        <select id="InboundTaskDetail.GetByCondition" resultMap="InboundTaskDetail_Result" cacheModel="InboundTaskDetailCache">
            <![CDATA[
                SELECT Id,TaskId,SkuId,PackId,IsBatchManagement,Qty
                    FROM dbo.InboundTaskDetail WITH (NOLOCK)
                    WHERE $value$
            ]]>
        </select>

        <procedure id="InboundTaskDetail.GetByPager" parameterMap="SplitPagerParameters" resultMap="InboundTaskDetail_Result" >
            <![CDATA[
                Usp_SplitPager
            ]]>
        </procedure>
        
        <insert id="InboundTaskDetail.Insert"   parameterClass="InboundTaskDetail">
            <![CDATA[
                INSERT INTO dbo.InboundTaskDetail 
                    (TaskId,SkuId,PackId,IsBatchManagement,Qty) 
                VALUES 
                    (#TaskId#,#SkuId#,#PackId#,#IsBatchManagement#,#Qty#)
            ]]>	
            <selectKey resultClass="int" type="post" property="Id" > 
            <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
            </selectKey>
        </insert>
        
        <update id="InboundTaskDetail.Update" parameterClass="InboundTaskDetail">
            <![CDATA[
                UPDATE dbo.InboundTaskDetail SET TaskId = #TaskId#,SkuId = #SkuId#,PackId = #PackId#,IsBatchManagement = #IsBatchManagement#,Qty = #Qty#
                    WHERE Id = #Id#
            ]]>
        </update>
        
        <delete id="InboundTaskDetail.Delete" parameterClass="InboundTaskDetail">
            <![CDATA[
                DELETE FROM dbo.InboundTaskDetail WHERE Id = #Id#
            ]]>
        </delete>
        
        <delete id="InboundTaskDetail.DeleteAll" parameterClass="InboundTaskDetail">
            <![CDATA[
                DELETE FROM dbo.InboundTaskDetail
            ]]>
        </delete>
    </statements>
</sqlMap>
