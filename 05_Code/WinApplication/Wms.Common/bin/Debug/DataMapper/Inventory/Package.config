<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="Package" xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Package" type="Business.Domain.Inventory.Package,Business.Domain" />
  </alias>
    
  <!-- 缓存机制 -->
  <cacheModels>
    <cacheModel id="PackageCache" implementation="MEMORY">
      <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
      <flushInterval minutes="5" />
      <flushOnExecute statement="Package.Insert" />
      <flushOnExecute statement="Package.Update" />
      <flushOnExecute statement="Package.Delete" />
      <flushOnExecute statement="Package.DeleteAll" />
      <property name="Type" value="Weak" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap class="Package" id="Package_Result">
      <result column="PackageId" property="PackageId" />
      <result column="PackageNumber" property="PackageNumber" />
      <result column="WarehouseId" property="WarehouseId" />
      <result column="BillId" property="BillId" />
      <result column="LinkBillNumber" property="LinkBillNumber" />
      <result column="PackageIndex" property="PackageIndex" />
      <result column="Weight" property="Weight" />
      <result column="Volume" property="Volume" />
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="SplitPagerParameters" class="Hashtable">
      <parameter property="TableName" column="TableName" />
      <parameter property="SelectFields" column="SelectFields" />
      <parameter property="OrderByField" column="OrderByField" />
      <parameter property="PageSize" column="PageSize" />
      <parameter property="PageIndex" column="PageIndex" />
      <parameter property="OrderType" column="OrderType" />
      <parameter property="SelectCondition" column="SelectCondition" />
      <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
    </parameterMap>
  </parameterMaps>

  <statements>
    <select id="Package.Get" resultMap="Package_Result" cacheModel="PackageCache">
      <![CDATA[
                SELECT PackageId,PackageNumber,WarehouseId,BillId,LinkBillNumber,PackageIndex,Weight,Volume FROM dbo.Package WITH (NOLOCK)
                    WHERE PackageId = #PackageId#
            ]]>	
    </select>

    <select id="Package.GetAll" resultMap="Package_Result">
      <![CDATA[
                SELECT PackageId,PackageNumber,WarehouseId,BillId,LinkBillNumber,PackageIndex,Weight,Volume
                    FROM dbo.Package WITH (NOLOCK)
            ]]>
    </select>

    <select id="Package.GetByCondition" resultMap="Package_Result" cacheModel="PackageCache">
      <![CDATA[
                SELECT PackageId,PackageNumber,WarehouseId,BillId,LinkBillNumber,PackageIndex,Weight,Volume
                    FROM dbo.Package WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <procedure id="Package.GetByPager" parameterMap="SplitPagerParameters" resultMap="Package_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <insert id="Package.Insert" parameterClass="Package">
      <![CDATA[
                INSERT INTO dbo.Package 
                    (PackageNumber,WarehouseId,BillId,LinkBillNumber,PackageIndex,Weight,Volume) 
                VALUES 
                    (#PackageNumber#,#WarehouseId#,#BillId#,#LinkBillNumber#,#PackageIndex#,#Weight#,#Volume#)
            ]]>	
      <selectKey resultClass="int" type="post" property="PackageId"> 
        <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
      </selectKey>
    </insert>

    <update id="Package.Update" parameterClass="Package">
      <![CDATA[
                UPDATE dbo.Package SET PackageNumber = #PackageNumber#,WarehouseId = #WarehouseId#,BillId = #BillId#,LinkBillNumber = #LinkBillNumber#,PackageIndex = #PackageIndex#,Weight = #Weight#,Volume = #Volume#
                    WHERE PackageId = #PackageId#
            ]]>
    </update>

    <delete id="Package.Delete" parameterClass="Package">
      <![CDATA[
                DELETE FROM dbo.Package WHERE PackageId = #PackageId#
            ]]>
    </delete>

    <delete id="Package.DeleteAll" parameterClass="Package">
      <![CDATA[
                DELETE FROM dbo.Package
            ]]>
    </delete>
  </statements>
</sqlMap>