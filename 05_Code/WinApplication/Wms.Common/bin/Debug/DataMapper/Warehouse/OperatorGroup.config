<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="OperatorGroup" xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="OperatorGroup" type="Business.Domain.Warehouse.OperatorGroup,Business.Domain" />
    <typeAlias alias="User" type="Business.Domain.Application.User,Business.Domain" />
  </alias>
    
  <!-- 缓存机制 -->
  <cacheModels>
    <cacheModel id="OperatorGroupCache" implementation="MEMORY">
      <!-- 设定缓存有效期，如果超过此设定值，则将此CacheModel缓存清空 -->
      <flushInterval minutes="5" />
      <flushOnExecute statement="OperatorGroup.Insert" />
      <flushOnExecute statement="OperatorGroup.Update" />
      <flushOnExecute statement="OperatorGroup.Delete" />
      <flushOnExecute statement="OperatorGroup.DeleteAll" />
      <property name="Type" value="Weak" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap class="OperatorGroup" id="OperatorGroup_Result">
      <result column="GroupId" property="GroupId" />
      <result column="GroupName" property="GroupName" />
      <result column="WarehouseId" property="WarehouseId" />
      <result column="OperationType" property="OperationType" />
      <result column="Remark" property="Remark" />
      <result column="CreateUser" property="CreateUser" />
      <result column="CreateTime" property="CreateTime" />
      <result column="EditUser" property="EditUser" />
      <result column="EditTime" property="EditTime" />
      <result column="IsActive" property="IsActive" />
    </resultMap>

    <resultMap class="User" id="User_Result">
      <result column="ApplicationId" property="ApplicationId" />
      <result column="UserId" property="UserId" />
      <result column="UserCode" property="UserCode" />
      <result column="UserName" property="UserName" />
      <result column="Password" property="Password" />
      <result column="CreateTime" property="CreateTime" />
      <result column="LoginTime" property="LoginTime" />
      <result column="Remark" property="Remark" />
      <result column="IsActive" property="IsActive" />
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="SplitPagerParameters" class="Hashtable">
      <parameter property="TableName" column="TableName" />
      <parameter property="SelectFields" column="SelectFields" />
      <parameter property="OrderByField" column="OrderByField" />
      <parameter property="PageSize" column="PageSize" />
      <parameter property="PageIndex" column="PageIndex" />
      <parameter property="OrderType" column="OrderType" />
      <parameter property="SelectCondition" column="SelectCondition" />
      <parameter property="RecordsCount" column="RecordsCount" direction="Output" />
    </parameterMap>
  </parameterMaps>

  <statements>
    <select id="OperatorGroup.Get" resultMap="OperatorGroup_Result" cacheModel="OperatorGroupCache">
      <![CDATA[
                SELECT GroupId,GroupName,WarehouseId,OperationType,Remark,CreateUser,CreateTime,EditUser,EditTime,IsActive FROM dbo.OperatorGroup WITH (NOLOCK)
                    WHERE GroupId = #GroupId#
            ]]>	
    </select>

    <select id="OperatorGroup.GetAll" resultMap="OperatorGroup_Result">
      <![CDATA[
                SELECT GroupId,GroupName,WarehouseId,OperationType,Remark,CreateUser,CreateTime,EditUser,EditTime,IsActive
                    FROM dbo.OperatorGroup WITH (NOLOCK)
            ]]>
    </select>

    <select id="OperatorGroup.GetByCondition" resultMap="OperatorGroup_Result" cacheModel="OperatorGroupCache">
      <![CDATA[
                SELECT GroupId,GroupName,WarehouseId,OperationType,Remark,CreateUser,CreateTime,EditUser,EditTime,IsActive
                    FROM dbo.OperatorGroup WITH (NOLOCK)
                    WHERE $value$
            ]]>
    </select>

    <procedure id="OperatorGroup.GetByPager" parameterMap="SplitPagerParameters" resultMap="OperatorGroup_Result">
      <![CDATA[
                Usp_SplitPager
            ]]>
    </procedure>

    <insert id="OperatorGroup.Insert" parameterClass="OperatorGroup">
      <![CDATA[
                INSERT INTO dbo.OperatorGroup 
                    (GroupName,WarehouseId,OperationType,Remark,CreateUser,CreateTime,EditUser,EditTime,IsActive) 
                VALUES 
                    (#GroupName#,#WarehouseId#,#OperationType#,#Remark#,#CreateUser#,#CreateTime#,#EditUser#,#EditTime#,#IsActive#)
            ]]>	
      <selectKey resultClass="int" type="post" property="GroupId"> 
        <![CDATA[
                SELECT @@IDENTITY as value
            ]]>
      </selectKey>
    </insert>

    <update id="OperatorGroup.Update" parameterClass="OperatorGroup">
      <![CDATA[
                UPDATE dbo.OperatorGroup SET GroupName = #GroupName#,WarehouseId = #WarehouseId#,OperationType = #OperationType#,Remark = #Remark#,CreateUser = #CreateUser#,CreateTime = #CreateTime#,EditUser = #EditUser#,EditTime = #EditTime#,IsActive = #IsActive#
                    WHERE GroupId = #GroupId#
            ]]>
    </update>

    <delete id="OperatorGroup.Delete" parameterClass="OperatorGroup">
      <![CDATA[
                DELETE FROM dbo.OperatorGroup WHERE GroupId = #GroupId#
            ]]>
    </delete>

    <delete id="OperatorGroup.DeleteAll" parameterClass="OperatorGroup">
      <![CDATA[
                DELETE FROM dbo.OperatorGroup
            ]]>
    </delete>

    <select id="OperatorGroup.GetMembers" resultMap="User_Result">
      <![CDATA[
                SELECT u.ApplicationId,u.UserId,u.UserCode,u.UserName,u.Password,u.CreateTime,u.LoginTime,u.Remark,u.IsActive 
                FROM dbo.[Vw_User] u WITH (NOLOCK)
                INNER JOIN dbo.GroupMember gm ON gm.UserId = u.UserId
                WHERE gm.GroupId = #GroupId#
            ]]>
    </select>
  </statements>
</sqlMap>